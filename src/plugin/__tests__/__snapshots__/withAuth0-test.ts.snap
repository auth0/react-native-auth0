// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addAndroidAuth0Manifest should throw if domain is not present when config sent as array 1`] = `"No auth0 domain specified in expo config"`;

exports[`addAndroidAuth0Manifest should throw if domain is not present when config sent as object 1`] = `"No auth0 domain specified in expo config"`;

exports[`addAndroidAuth0Manifest should throw if scheme & applicationId is not present 1`] = `"No auth0 scheme specified or package found in expo config"`;

exports[`addAndroidAuth0Manifest with multiple domains and schemes should have that value 1`] = `
{
  "modRawConfig": {
    "name": " ",
    "slug": " ",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "android",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "manifest": {
      "$": {
        "xmlns:android": "http://schemas.android.com/apk/res/android",
        "xmlns:tools": "http://schemas.android.com/tools",
      },
      "application": [
        {
          "$": {
            "android:name": "com.auth0.android.tests.MainApplication",
          },
          "activity": [
            {
              "$": {
                "android:name": "com.auth0.android.provider.RedirectActivity",
              },
              "intent-filter": [
                {
                  "action": [
                    {
                      "$": {
                        "android:name": "android.intent.action.VIEW",
                      },
                    },
                  ],
                  "category": [
                    {
                      "$": {
                        "android:name": "android.intent.category.DEFAULT",
                      },
                    },
                    {
                      "$": {
                        "android:name": "android.intent.category.BROWSABLE",
                      },
                    },
                  ],
                  "data": [
                    {
                      "$": {
                        "android:host": "sample.us.auth0.com",
                        "android:scheme": "com.sample.us.auth0",
                      },
                    },
                    {
                      "$": {
                        "android:host": "sample.eu.auth0.com",
                        "android:scheme": "com.sample.eu.auth0",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "queries": [],
    },
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addAndroidAuth0Manifest with multiple domains should have that value and package name as scheme 1`] = `
{
  "modRawConfig": {
    "name": " ",
    "slug": " ",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "android",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "manifest": {
      "$": {
        "xmlns:android": "http://schemas.android.com/apk/res/android",
        "xmlns:tools": "http://schemas.android.com/tools",
      },
      "application": [
        {
          "$": {
            "android:name": "com.auth0.android.tests.MainApplication",
          },
          "activity": [
            {
              "$": {
                "android:name": "com.auth0.android.provider.RedirectActivity",
              },
              "intent-filter": [
                {
                  "action": [
                    {
                      "$": {
                        "android:name": "android.intent.action.VIEW",
                      },
                    },
                  ],
                  "category": [
                    {
                      "$": {
                        "android:name": "android.intent.category.DEFAULT",
                      },
                    },
                    {
                      "$": {
                        "android:name": "android.intent.category.BROWSABLE",
                      },
                    },
                  ],
                  "data": [
                    {
                      "$": {
                        "android:host": "sample.us.auth0.com",
                        "android:scheme": "com.sample.application.auth0",
                      },
                    },
                    {
                      "$": {
                        "android:host": "sample.eu.auth0.com",
                        "android:scheme": "com.sample.application.auth0",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "queries": [],
    },
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addAndroidAuth0Manifest with scheme should have that value 1`] = `
{
  "modRawConfig": {
    "name": " ",
    "slug": " ",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "android",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "manifest": {
      "$": {
        "xmlns:android": "http://schemas.android.com/apk/res/android",
        "xmlns:tools": "http://schemas.android.com/tools",
      },
      "application": [
        {
          "$": {
            "android:name": "com.auth0.android.tests.MainApplication",
          },
          "activity": [
            {
              "$": {
                "android:name": "com.auth0.android.provider.RedirectActivity",
              },
              "intent-filter": [
                {
                  "action": [
                    {
                      "$": {
                        "android:name": "android.intent.action.VIEW",
                      },
                    },
                  ],
                  "category": [
                    {
                      "$": {
                        "android:name": "android.intent.category.DEFAULT",
                      },
                    },
                    {
                      "$": {
                        "android:name": "android.intent.category.BROWSABLE",
                      },
                    },
                  ],
                  "data": [
                    {
                      "$": {
                        "android:host": "sample.auth0.com",
                        "android:scheme": "com.sample.application",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "queries": [],
    },
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addAndroidAuth0Manifest without scheme should have package name 1`] = `
{
  "modRawConfig": {
    "name": " ",
    "slug": " ",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "android",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "manifest": {
      "$": {
        "xmlns:android": "http://schemas.android.com/apk/res/android",
        "xmlns:tools": "http://schemas.android.com/tools",
      },
      "application": [
        {
          "$": {
            "android:name": "com.auth0.android.tests.MainApplication",
          },
          "activity": [
            {
              "$": {
                "android:name": "com.auth0.android.provider.RedirectActivity",
              },
              "intent-filter": [
                {
                  "action": [
                    {
                      "$": {
                        "android:name": "android.intent.action.VIEW",
                      },
                    },
                  ],
                  "category": [
                    {
                      "$": {
                        "android:name": "android.intent.category.DEFAULT",
                      },
                    },
                    {
                      "$": {
                        "android:name": "android.intent.category.BROWSABLE",
                      },
                    },
                  ],
                  "data": [
                    {
                      "$": {
                        "android:host": "sample.auth0.com",
                        "android:scheme": "com.auth0.sample.auth0",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
      "queries": [],
    },
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addAuth0AppDelegateCode does not modify Swift AppDelegate when linking is already present 1`] = `
"
// Swift AppDelegate template for Expo 53+

import UIKit
import React
import React_RCTAppDelegate
import ReactAppDependencyProvider
import React_RCTLinking

@main
class AppDelegate: RCTAppDelegate {
  override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {
    self.moduleName = "Auth0Example"
    self.dependencyProvider = RCTAppDependencyProvider()

    // You can add your custom initial props in the dictionary below.
    // They will be passed down to the ViewController used by React Native.
    self.initialProps = [:]

    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
  }

  override func sourceURL(for bridge: RCTBridge) -> URL? {
    self.bundleURL()
  }

  override func bundleURL() -> URL? {
#if DEBUG
    RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: "index")
#else
    Bundle.main.url(forResource: "main", withExtension: "jsbundle")
#endif
  }
  
  // Handle URL schemes for Auth0 authentication
  override func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {
    return RCTLinkingManager.application(app, open: url, options: options)
  }
}
"
`;

exports[`addAuth0AppDelegateCode modifies Swift AppDelegate to add linking 1`] = `
"
// Swift AppDelegate template for Expo 53+

import UIKit
import React
import React_RCTAppDelegate
import ReactAppDependencyProvider

@main
class AppDelegate: RCTAppDelegate {
  override func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {
    self.moduleName = "Auth0Example"
    self.dependencyProvider = RCTAppDependencyProvider()

    // You can add your custom initial props in the dictionary below.
    // They will be passed down to the ViewController used by React Native.
    self.initialProps = [:]

    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
  }
// @generated begin react-native-auth0-linking-swift - expo prebuild (DO NOT MODIFY) sync-ba380858111cdf18a4962daf3f391b02f6c9b25a
  // Handle URL schemes for Auth0 authentication
  override func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {
    return RCTLinkingManager.application(app, open: url, options: options)
  }
// @generated end react-native-auth0-linking-swift

  override func sourceURL(for bridge: RCTBridge) -> URL? {
    self.bundleURL()
  }

  override func bundleURL() -> URL? {
#if DEBUG
    RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: "index")
#else
    Bundle.main.url(forResource: "main", withExtension: "jsbundle")
#endif
  }
}
"
`;

exports[`addIOSAuth0ConfigInInfoPList should add all the schemes 1`] = `
{
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.sample.us.auth0",
          "com.sample.eu.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should append all the schemes 1`] = `
{
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.differentsample.auth0",
          "com.sample.us.auth0",
          "com.sample.eu.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should append if another scheme is already present 1`] = `
{
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.differentsample.auth0",
          "com.sample.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should have the bundle identifier if scheme is not provided  1`] = `
{
  "ios": {
    "bundleIdentifier": "com.sample.auth0",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.sample.auth0.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should have the bundle identifier if scheme is not provided  2`] = `
{
  "ios": {
    "bundleIdentifier": "com.sample.auth0",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.sample.auth0.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should have the scheme provided  1`] = `
{
  "ios": {
    "bundleIdentifier": "different.bundle.id",
  },
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.sample.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should ignore if scheme is already present 1`] = `
{
  "modRequest": {
    "introspect": true,
    "modName": "",
    "platform": "ios",
    "platformProjectRoot": "",
    "projectRoot": "",
  },
  "modResults": {
    "CFBundleURLTypes": [
      {
        "CFBundleURLName": "auth0",
        "CFBundleURLSchemes": [
          "com.sample.auth0",
        ],
      },
    ],
    "contents": "",
    "path": "",
  },
  "name": " ",
  "slug": " ",
}
`;

exports[`addIOSAuth0ConfigInInfoPList should throw if scheme and bundle identifier is not defined 1`] = `"No auth0 scheme specified or bundle identifier found in expo config"`;

exports[`addIOSAuth0ConfigInInfoPList should throw if scheme and bundle identifier is not defined 2`] = `"No auth0 scheme specified or bundle identifier found in expo config"`;
