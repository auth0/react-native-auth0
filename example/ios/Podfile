def find_and_replace_boost_url
  pod_spec = "../node_modules/react-native/third-party-podspecs/boost.podspec"
  puts "Debug: Starting boost URL replacement"
  if File.exist?(pod_spec)
    puts "Debug: Found boost.podspec"
    spec_content = File.read(pod_spec)
    spec_content.gsub!(
      'https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2',
      'https://archives.boost.io/release/1.76.0/source/boost_1_76_0.tar.bz2'
    )
    File.write(pod_spec, spec_content)
    puts "Debug: Updated boost.podspec"
  end
end

ENV['RCT_NEW_ARCH_ENABLED'] = '1'


# Let the magic happen!
find_and_replace_boost_url

# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Auth0Example' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
      end
    end
  end
end
